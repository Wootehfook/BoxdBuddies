name: Security Monitoring

on:
  schedule:
    # Run security checks daily at 2 AM UTC
    - cron: "0 2 * * *"
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies (cached)
        run: |
          # Use npm ci for faster, deterministic installs
          npm ci --prefer-offline --no-audit

      - name: Run npm audit
        run: |
          npm audit --audit-level moderate
          echo "NPM audit completed"

      # CodeQL Analysis - using GitHub's default setup for maximum security coverage
      # GitHub's default CodeQL detected 26 HIGH security alerts that custom workflows missed
      # Prioritizing comprehensive vulnerability detection over custom configuration
      # Default setup provides superior security analysis for production applications
      # - name: Run CodeQL Analysis
      #   uses: github/codeql-action/init@v3
      #   with:
      #     languages: javascript, typescript

      # - name: Autobuild
      #   uses: github/codeql-action/autobuild@v3

      # - name: Perform CodeQL Analysis
      #   uses: github/codeql-action/analyze@v3

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: high # Only fail on high/critical vulnerabilities
          fail-on-scopes: runtime # Only check runtime dependencies
          allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC, 0BSD, Unlicense, AGPL-3.0, GPL-3.0
          # Allow packages with low OpenSSF scores that are legitimate dependencies
          # Note: Removed deny-licenses to avoid conflict with allow-licenses
          comment-summary-in-pr: false
        continue-on-error: true # Don't block CI on dependency review warnings

  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Run Trivy secret scanner (optimized)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"
          # Speed optimizations:
          exit-code: 0 # Don't fail on findings, just report
          severity: "HIGH,CRITICAL" # Focus on critical secrets only

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

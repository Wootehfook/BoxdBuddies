name: Backend Quality Checks

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Download frontend build artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: dist/
        continue-on-error: true

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libglib2.0-dev libsoup2.4-dev
          sudo apt-get install -y libjavascriptcoregtk-4.1-dev || true
          sudo apt-get install -y libjavascriptcoregtk-4.0-dev || echo "4.0 version not available, creating symlink"
          ARCH_PATH="/usr/lib/x86_64-linux-gnu/pkgconfig"
          LIB_PATH="/usr/lib/x86_64-linux-gnu"
          if [ ! -f "${ARCH_PATH}/javascriptcoregtk-4.0.pc" ] && [ -f "${ARCH_PATH}/javascriptcoregtk-4.1.pc" ]; then
            echo "Creating JavaScriptCore 4.0 compatibility symlink..."
            sudo ln -sf "${ARCH_PATH}/javascriptcoregtk-4.1.pc" "${ARCH_PATH}/javascriptcoregtk-4.0.pc"
          fi
          if [ ! -f "${ARCH_PATH}/webkit2gtk-4.0.pc" ] && [ -f "${ARCH_PATH}/webkit2gtk-4.1.pc" ]; then
            echo "Creating WebKit2GTK 4.0 compatibility symlink..."
            sudo ln -sf "${ARCH_PATH}/webkit2gtk-4.1.pc" "${ARCH_PATH}/webkit2gtk-4.0.pc"
          fi
          if [ -f "${LIB_PATH}/libjavascriptcoregtk-4.1.so" ]; then
            sudo ln -sf "${LIB_PATH}/libjavascriptcoregtk-4.1.so" "${LIB_PATH}/libjavascriptcoregtk-4.0.so"
          fi
          if [ -f "${LIB_PATH}/libwebkit2gtk-4.1.so" ]; then
            sudo ln -sf "${LIB_PATH}/libwebkit2gtk-4.1.so" "${LIB_PATH}/libwebkit2gtk-4.0.so"
          fi

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri

      - name: Format check
        run: cargo fmt --all -- --check
        working-directory: src-tauri
        continue-on-error: true

      - name: Clippy check
        run: cargo clippy --all-targets --all-features -- -D warnings
        working-directory: src-tauri
        continue-on-error: true

      - name: Test
        run: cargo test
        working-directory: src-tauri
        continue-on-error: true

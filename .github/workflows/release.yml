name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (e.g., v1.0.1)"
        required: true
        default: "v1.0.1"

permissions:
  contents: write
  actions: read

jobs:
  # Build for Windows
  build-windows:
    runs-on: windows-latest
    permissions:
      contents: read
      actions: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: npm ci

      - name: Verify icons and configs
        run: |
          echo Listing icons and config files...
          dir src-tauri\icons
          dir src-tauri
          type src-tauri\tauri.conf.json
          type src-tauri\tauri.windows.conf.json

      - name: Cache cargo (Windows)
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: windows-cargo-${{ hashFiles('src-tauri/Cargo.lock') }}
          restore-keys: |
            windows-cargo-

      - name: Build Windows MSI
        # AI Generated: GitHub Copilot - 2025-08-07
        # Use Windows path separators per PR review suggestion
        run: npm run tauri build -- -c src-tauri\\tauri.windows.conf.json --bundles msi

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-msi
          path: src-tauri/target/release/bundle/msi/*.msi

  # Build for macOS
  build-macos:
    runs-on: macos-latest
    permissions:
      contents: read
      actions: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      # AI Generated: GitHub Copilot - 2025-08-07 (relocate cache per review feedback before build)
      - name: Cache cargo (macOS)
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: macos-cargo-${{ hashFiles('src-tauri/Cargo.lock') }}
          restore-keys: |
            macos-cargo-

      - name: Install dependencies
        run: npm ci

      - name: Build macOS DMG
        run: npm run tauri build -- --bundles dmg

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-dmg
          path: src-tauri/target/release/bundle/dmg/*.dmg

  # Build for Linux
  build-linux:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      # AI Generated: GitHub Copilot - 2025-08-07 (relocate cache prior to build for consistency)
      - name: Cache cargo (Linux)
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: linux-cargo-${{ hashFiles('src-tauri/Cargo.lock') }}
          restore-keys: |
            linux-cargo-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libjavascriptcoregtk-4.1-dev \
            build-essential \
            curl \
            wget \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libsoup2.4-dev

      - name: Create Ubuntu 24.04 compatibility symlinks
        run: |
          # Create pkg-config compatibility symlinks for Ubuntu 24.04
          sudo ln -sf /usr/lib/x86_64-linux-gnu/pkgconfig/webkit2gtk-4.1.pc /usr/lib/x86_64-linux-gnu/pkgconfig/webkit2gtk-4.0.pc
          sudo ln -sf /usr/lib/x86_64-linux-gnu/pkgconfig/javascriptcoregtk-4.1.pc /usr/lib/x86_64-linux-gnu/pkgconfig/javascriptcoregtk-4.0.pc
          # Create library compatibility symlinks
          sudo ln -sf /usr/lib/x86_64-linux-gnu/libwebkit2gtk-4.1.so /usr/lib/x86_64-linux-gnu/libwebkit2gtk-4.0.so
          sudo ln -sf /usr/lib/x86_64-linux-gnu/libjavascriptcoregtk-4.1.so /usr/lib/x86_64-linux-gnu/libjavascriptcoregtk-4.0.so
          # Set PKG_CONFIG_PATH for build compatibility
          echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:${PKG_CONFIG_PATH:-}" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm ci

      - name: Build Linux packages
        run: |
          npm run tauri build -- --bundles deb
          npm run tauri build -- --bundles appimage

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-packages
          path: |
            src-tauri/target/release/bundle/deb/*.deb
            src-tauri/target/release/bundle/appimage/*.AppImage

  # Create GitHub Release
  create-release:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Generate checksums
        run: |
          set -e
          VERSION="${{ github.event.inputs.version || github.ref_name }}"
          echo "Generating SHA256 checksums for release artifacts (version: $VERSION)"
          echo "# BoxdBuddies Artifact Checksums ($VERSION)" > CHECKSUMS.txt
          echo "Generated on $(date -u '+%Y-%m-%dT%H:%M:%SZ')" >> CHECKSUMS.txt
          echo "" >> CHECKSUMS.txt
          missing=0
          for f in windows-msi/*.msi macos-dmg/*.dmg linux-packages/*.deb linux-packages/*.AppImage; do
            if [ -f "$f" ]; then
              sha256sum "$f" >> CHECKSUMS.txt
            else
              echo "Skipping missing artifact: $f" >&2
              missing=$((missing+1))
            fi
          done
          echo "" >> CHECKSUMS.txt
          echo "Integrity: Verify with: sha256sum -c CHECKSUMS.txt (ignore header lines)." >> CHECKSUMS.txt
          echo "Missing artifacts skipped: $missing" >> CHECKSUMS.txt

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version || github.ref_name }}
          files: |
            windows-msi/*.msi
            macos-dmg/*.dmg
            linux-packages/*.deb
            linux-packages/*.AppImage
            CHECKSUMS.txt
          generate_release_notes: true
          draft: false
          prerelease: false
          body_path: RELEASE_NOTES.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
